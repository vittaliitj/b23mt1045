#include <stdio.h>
#include <math.h>

// Function to convert binary to decimal
int binaryToDecimal(long long n) {
    int decimalNumber = 0, i = 0, remainder;
    while (n != 0) {
        remainder = n % 10;
        n /= 10;
        decimalNumber += remainder * pow(2, i);
        ++i;
    }
    return decimalNumber;
}

// Function to convert decimal to binary
long long decimalToBinary(int n) {
    long long binaryNumber = 0;
    int remainder, i = 1;
    while (n != 0) {
        remainder = n % 2;
        n /= 2;
        binaryNumber += remainder * i;
        i *= 10;
    }
    return binaryNumber;
}

// Function to convert decimal to octal
int decimalToOctal(int decimalNumber) {
    int octalNumber = 0, i = 1;
    while (decimalNumber != 0) {
        octalNumber += (decimalNumber % 8) * i;
        decimalNumber /= 8;
        i *= 10;
    }
    return octalNumber;
}

// Function to convert decimal to hexadecimal
void decimalToHexadecimal(int decimalNumber) {
    char hexadecimalNumber[100];
    int i = 0;
    while (decimalNumber != 0) {
        int remainder = decimalNumber % 16;
        if (remainder < 10)
            hexadecimalNumber[i++] = remainder + 48;
        else
            hexadecimalNumber[i++] = remainder + 55;
        decimalNumber /= 16;
    }
    printf("Hexadecimal number: ");
    for (int j = i - 1; j >= 0; j--)
        printf("%c", hexadecimalNumber[j]);
}

// Function to convert octal to binary
long long octalToBinary(int octalNumber) {
    int decimalNumber = 0, i = 0;
    long long binaryNumber = 0;
    while (octalNumber != 0) {
        decimalNumber += (octalNumber % 10) * pow(8, i);
        ++i;
        octalNumber /= 10;
    }
    i = 1;
    while (decimalNumber != 0) {
        binaryNumber += (decimalNumber % 2) * i;
        decimalNumber /= 2;
        i *= 10;
    }
    return binaryNumber;
}

// Function to convert octal to decimal
int octalToDecimal(int octalNumber) {
    int decimalNumber = 0, i = 0;
    while (octalNumber != 0) {
        decimalNumber += (octalNumber % 10) * pow(8, i);
        ++i;
        octalNumber /= 10;
    }
    return decimalNumber;
}

// Function to convert hexadecimal to decimal
int hexadecimalToDecimal(char hexadecimalNumber[]) {
    int decimalNumber = 0, i = 0, value, length;
    for (length = 0; hexadecimalNumber[length] != '\0'; length++);
    for (i = 0; hexadecimalNumber[i] != '\0'; i++) {
        length--;
        if (hexadecimalNumber[i] >= '0' && hexadecimalNumber[i] <= '9')
            value = hexadecimalNumber[i] - 48;
        else if (hexadecimalNumber[i] >= 'A' && hexadecimalNumber[i] <= 'F')
            value = hexadecimalNumber[i] - 55;
        else if (hexadecimalNumber[i] >= 'a' && hexadecimalNumber[i] <= 'f')
            value = hexadecimalNumber[i] - 87;
        decimalNumber += value * pow(16, length);
    }
    return decimalNumber;
}

int main() {
    int choice;
    printf("Choose the conversion you want to perform:\n");
    printf("1. Binary to Decimal\n");
    printf("2. Decimal to Binary\n");
    printf("3. Decimal to Octal\n");
    printf("4. Decimal to Hexadecimal\n");
    printf("5. Octal to Binary\n");
    printf("6. Octal to Decimal\n");
    printf("7. Hexadecimal to Decimal\n");
    scanf("%d", &choice);
    
    switch(choice) {
        case 1:
            // Binary to Decimal
            long long binaryNum;
            printf("Enter a binary number: ");
            scanf("%lld", &binaryNum);
            printf("Decimal number: %d", binaryToDecimal(binaryNum));
            break;
        case 2:
            // Decimal to Binary
            int decimalNum;
            printf("Enter a decimal number: ");
            scanf("%d", &decimalNum);
            printf("Binary number: %lld", decimalToBinary(decimalNum));
            break;
        case 3:
            // Decimal to Octal
            int decNum;
            printf("Enter a decimal number: ");
            scanf("%d", &decNum);
            printf("Octal number: %d", decimalToOctal(decNum));
            break;
        case 4:
            // Decimal to Hexadecimal
            int decNumber;
            printf("Enter a decimal number: ");
            scanf("%d", &decNumber);
            decimalToHexadecimal(decNumber);
            break;
        case 5:
            // Octal to Binary
            int octNum;
            printf("Enter an octal number: ");
            scanf("%d", &octNum);
            printf("Binary number: %lld", octalToBinary(octNum));
            break;
        case 6:
            // Octal to Decimal
            int octalNum;
            printf("Enter an octal number: ");
            scanf("%d", &octalNum);
            printf("Decimal number: %d", octalToDecimal(octalNum));
            break;
        case 7:
            // Hexadecimal to Decimal
            char hexNum[100];
            printf("Enter a hexadecimal number: ");
            scanf("%s", hexNum);
            printf("Decimal number: %d", hexadecimalToDecimal(hexNum));
            break;
        default:
            printf("Invalid choice");
    }
    return 0;
}
